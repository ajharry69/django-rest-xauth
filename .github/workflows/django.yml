name: Django CI

on:
  push:
    branches: [ master ]
    tags: [ v*.*.* ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: make install_requirements venv_bin_dir='' requirements_txt='requirements-lint.txt'

      - name: Run lint tests
        run: make test_lint venv_bin_dir=''

  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: make install_requirements venv_bin_dir=''

      - name: Run Tests
        run: make test

  build-n-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Get tag version
        if: startsWith(github.ref, 'refs/tags/')
        id: get_tag_version
        run: echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install pypa/build
        run: python -m pip install build

      - name: Build a binary wheel and a source tarball
        run: python -m build --sdist --wheel --outdir dist/ .

      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Docker - authenticate
        if: startsWith(github.ref, 'refs/tags')
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker - build and push images
        if: startsWith(github.ref, 'refs/tags')
        run: make build_image_and_push image_tag=${{ steps.get_tag_version.outputs.TAG }}